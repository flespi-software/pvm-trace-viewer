{"version":3,"sources":["types.ts","lib/common.ts","components/SourceCodeView/index.tsx","components/TimeString/index.tsx","components/TraceStep/index.tsx","components/TraceDumpSteps/index.tsx","components/TracePacketPart/index.tsx","components/TracePacket/index.tsx","components/TraceDumpViewer/index.tsx","components/TraceDumpSelector/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TTraceStepType","getDataSize","step","d","length","scrollTo","ref","scrollIntoView","behavior","block","inline","SourceCodeView","props","traceDump","stepIndex","trace","fileLines","sourceLines","main","lines","map","line","index","viewLine","c","undefined","className","TimeString","value","time","Date","toLocaleString","hour","minute","second","ms","Number","toFixed","split","TraceStep","body","vars","packetStep","setStepIndex","variables","getVarName","v","find","varId","displaySourceCodeLine","file","lineNum","sourceName","fileId","files","fId","fileName","bytecode_name","fileIndexToSourceName","trim","t","Line","NewData","size","slice","tm","Offset","l","o","Error","m","onClick","stepClick","TraceDumpSteps","showAllSteps","console","log","steps","forEach","push","TracePacketPart","packet","showStep","prevPacketIndex","fromIndex","findLastIndex","nextPacketIndex","findIndex","TracePacket","packetIndex","setPacketIndex","first","setTimeout","packetParts","i","prev","next","TraceDumpViewer","traceFile","useState","setShowAllSteps","setStep","_","name","prevStep","nextStep","type","onChange","e","target","checked","TraceDumpSelector","fileReader","FileReader","readAsText","setTraceFile","onload","result","fileJson","toString","JSON","parse","source","key","setTraceDump","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5a4e9b6.chunk.js","sourcesContent":["export interface TTraceFile {\n\tname: string;\t\t\t\t\t\t\t\t// trace dump file name\n\tsize: number;\t\t\t\t\t\t\t\t// trace dump file size\n}\n\nexport enum TTraceStepType {\n\tLine = \"l\",\t\t\t\t\t\t\t\t\t// new line of source code\n\tNewData = \"n\",\t\t\t\t\t\t\t\t// new input data received\n\tOffset = \"o\",\t\t\t\t\t\t\t\t// parsed part of the input data\n\tError = \"e\",\t\t\t\t\t\t\t\t// error occured\n}\n\nexport type TCodeLocation =\n\t[number, number, number];\t\t\t\t\t// file, line, column\n\nexport type TVariableUnset = number;\n\nexport type TVariableSet =\n\t[number, number, string];\t\t\t\t\t// variable id, variable type, variable value\n\nexport type TVariableAction = TVariableUnset | TVariableSet;\n\nexport interface TTraceStepBase {\n\tc: TCodeLocation;\t\t\t\t\t\t\t// source code location\n}\n\nexport interface TTraceStepLine extends TTraceStepBase {\n\tt: TTraceStepType.Line;\t\t\t\t\t\t// step type\n\tv: TVariableAction[];\t\t\t\t\t\t// list of changed variables\n}\n\nexport interface TTraceStepNewData extends TTraceStepBase {\n\tt: TTraceStepType.NewData;\t\t\t\t\t// step type\n\ttm: number;\t\t\t\t\t\t\t\t\t// timestamp\n\td: string;\t\t\t\t\t\t\t\t\t// hex string of the incoming data\n\to: number;\t\t\t\t\t\t\t\t\t// offset, 0 usually\n\n\t// getSize(): number;\n}\n\n// export class CTraceStepNewData implements TTraceStepNewData {\n// \tgetSize = () => {\n// \t\treturn 0;\n// \t}\n// }\n\nexport const getDataSize = (step: TTraceStepNewData) => step.d.length / 2;\n\nexport interface TTraceStepOffset extends TTraceStepBase {\n\tt: TTraceStepType.Offset;\t\t\t\t\t// step type\n\to: number;\t\t\t\t\t\t\t\t\t// offset\n\tl: number;\t\t\t\t\t\t\t\t\t// last (previous) offset\n}\n\nexport interface TTraceStepError extends TTraceStepBase {\n\tt: TTraceStepType.Error;\t\t\t\t\t\t// step type\n\to: number;\t\t\t\t\t\t\t\t\t// offset\n\tm: string;\t\t\t\t\t\t\t\t\t// error message\n}\n\nexport type TTraceStep = TTraceStepLine | TTraceStepNewData | TTraceStepOffset | TTraceStepError;\n\nexport type TCodeFileId = [number, string];\t\t// file id, file name\n\nexport type TVariableId = [number, string];\t\t// variable id, variable name\n\nexport interface TSourceCode {\n\tmain: string;\n\t[key: string]: string;\n}\n\nexport interface TSourceCodeLines {\n\t[key: string]: string[];\n}\n\nexport interface TTraceDump {\n\tbytecode_name: string;\n\tfiles: TCodeFileId[];\n\tvariables: TVariableId[];\n\ttrace: TTraceStep[];\n\tsource?: TSourceCode;\n\tsourceLines?: TSourceCodeLines;\n}\n","export const scrollTo = (ref: any) => {\n\tif (ref)\n\t\tref.scrollIntoView({ behavior: 'auto', block: 'center', inline: 'center' });\n};\n","import React from 'react';\nimport { scrollTo } from '../../lib/common';\nimport { TTraceDump } from '../../types';\nimport './style.css';\n\ninterface SourceCodeViewProps {\n\ttraceDump: TTraceDump;\n\tstepIndex: number;\n}\n\nconst SourceCodeView: React.FC<SourceCodeViewProps> = (props) => {\n\tconst { traceDump, stepIndex } = props;\n\tconst step = traceDump.trace[stepIndex];\n\tconst fileLines = traceDump.sourceLines?.main; // NOTE: hardcoded \"main\" source code file\n\n\tif (!fileLines)\n\t\treturn <div>no source code available</div>;\n\n\tconst lines = fileLines.map((line, index) => {\n\t\tlet viewLine\n\t\tif (line === '')\n\t\t\tviewLine = <br />;\n\t\telse\n\t\t\tviewLine = line;\n\n\t\treturn <pre\n\t\t\tkey={index}\n\t\t\tref={index === (step.c[1] - 1) ? scrollTo : undefined}\n\t\t\tclassName={index === (step.c[1] - 1) ? 'source-code-line source-code-line-selected': 'source-code-line'}>{viewLine}</pre>\n\t});\n\n\treturn <div className=\"source-code-lines\">\n\t\t{lines}\n\t</div>\n};\n\nexport default SourceCodeView;\n","import React from 'react';\n\ninterface TimeStringProps {\n\t/** unix timestamp */\n\tvalue: number;\n}\n\nconst TimeString: React.FC<TimeStringProps> = (props) => {\n\tconst { value } = props;\n\tconst d = new Date(value * 1000);\n\tconst time = d.toLocaleString('en-GB', {\n\t\thour: 'numeric',\n\t\tminute: 'numeric',\n\t\tsecond: 'numeric',\n\t});\n\tconst ms = Number(value).toFixed(6).split('.')[1];\n\treturn <span>{time}.{ms}</span>;\n};\n\nexport default TimeString;\n","import React from 'react';\nimport { getDataSize, TTraceDump, TTraceStep, TTraceStepNewData, TTraceStepType, TVariableAction } from '../../types';\nimport TimeString from '../TimeString';\nimport { scrollTo } from '../../lib/common';\nimport './style.css';\n\ninterface TraceStepProps {\n\ttraceDump: TTraceDump;\n\tstepIndex: number;\n\tindex: number;\n\tpacketStep?: TTraceStepNewData;\n\tsetStepIndex: (index: number) => void;\n\tstep: TTraceStep;\n}\n\nconst TraceStep: React.FC<TraceStepProps> = (props) => {\n\tconst { traceDump, stepIndex, index, packetStep, setStepIndex, step } = props;\n\tconst { variables } = traceDump;\n\n\tconst getVarName = (index: number) => {\n\t\tconst v = variables.find((varId) => varId[0] === index);\n\t\treturn v ? v[1] : \"?\";\n\t}\n\n\tconst listVars = (vars: TVariableAction[]) => {\n\t\treturn vars.map((v, index) => {\n\t\t\tif (typeof v === \"number\")\n\t\t\t\treturn <span key={index} className=\"trace-var\">UNSET ${getVarName(v)}</span>;\n\t\t\telse\n\t\t\t\treturn <span key={index} className=\"trace-var\">${getVarName(v[0])} = {v[2]}</span>\n\t\t})\n\t}\n\n\tconst fileIndexToSourceName = (file: number): string | null => {\n\t\tconst fileId = traceDump.files.find((fId) => fId[0] === file);\n\t\tif (!fileId)\n\t\t\treturn null;\n\t\tconst fileName = fileId[1];\n\t\tif (fileName === traceDump.bytecode_name)\n\t\t\treturn 'main';\n\t\treturn fileName;\n\t}\n\n\tconst displaySourceCodeLine = (file: number, lineNum: number) => {\n\t\tif (!traceDump.sourceLines)\n\t\t\treturn '?';\n\t\tconst sourceName = fileIndexToSourceName(file);\n\t\tif (!sourceName)\n\t\t\treturn '?';\n\t\tconst lines = traceDump.sourceLines[sourceName];\n\t\tconst line = lines[lineNum - 1];\n\t\treturn line.trim();\n\t}\n\n\tconst stepClick = (index: number) => {\n\t\tsetStepIndex(index);\n\t};\n\n\tlet body;\n\n\tswitch (step.t) {\n\tcase TTraceStepType.Line:\n\t\tbody = <div>\n\t\t\t<div>\n\t\t\t\t{listVars(step.v)}\n\t\t\t</div>\n\t\t\t<div className=\"trace-step-source-line\">\n\t\t\t\t{displaySourceCodeLine(step.c[0], step.c[1])}\n\t\t\t</div>\n\t\t</div>\n\t\tbreak;\n\tcase TTraceStepType.NewData:\n\t\tconst size = getDataSize(step);\n\t\tbody = <div>\n\t\t\t<div className=\"trace-step-data\">\n\t\t\t\t<div className=\"trace-step-data-column\">\n\t\t\t\t\t{size > 20 ? step.d.slice(0, 40) + \"...\" : step.d}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"trace-step-data-column\">\n\t\t\t\t\t{size} bytes,&nbsp;<TimeString value={step.tm} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"trace-step-source-line\">\n\t\t\t\t{displaySourceCodeLine(step.c[0], step.c[1])}\n\t\t\t</div>\n\t\t</div>;\n\t\tbreak;\n\tcase TTraceStepType.Offset:\n\t\tbody = <div>\n\t\t\t<div className=\"trace-step-data\">\n\t\t\t\t<div className=\"trace-step-data-column\">\n\t\t\t\t\t{packetStep && <span>&nbsp;&nbsp;{ packetStep.d.slice(step.l * 2, step.o * 2) }</span>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"trace-step-data-column\">\n\t\t\t\t\t{step.o - step.l} bytes: {step.l}...{step.o}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"trace-step-source-line\">\n\t\t\t\t{displaySourceCodeLine(step.c[0], step.c[1])}\n\t\t\t</div>\n\t\t</div>;\n\t\tbreak;\n\tcase TTraceStepType.Error:\n\t\tbody = <div>\n\t\t\tError:\n\t\t\t<pre className=\"trace-step-error\">{step.m}</pre>\n\t\t\t<div className=\"trace-step-source-line\">\n\t\t\t\t{displaySourceCodeLine(step.c[0], step.c[1])}\n\t\t\t</div>\n\t\t</div>;\n\t\tbreak;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tkey={index}\n\t\t\tref={index === stepIndex ? scrollTo : undefined}\n\t\t\tclassName={index === stepIndex ? \"trace-step trace-step-selected\" : \"trace-step\"}\n\t\t\tonClick={() => stepClick(index)}>\n\t\t\t{body}\n\t\t</div>\n\t);\n};\n\nexport default TraceStep;\n","import React from 'react';\nimport { TTraceDump, TTraceStep, TTraceStepNewData, TTraceStepType } from '../../types';\nimport TraceStep from '../TraceStep';\nimport './style.css';\n\ninterface TraceDumpStepsProps {\n\ttraceDump: TTraceDump;\n\tstepIndex: number;\n\tsetStepIndex: (index: number) => void;\n\tshowAllSteps: boolean;\n}\n\nconst TraceDumpSteps: React.FC<TraceDumpStepsProps> = (props) => {\n\tconst { trace } = props.traceDump;\n\tconst { stepIndex, setStepIndex, showAllSteps } = props;\n\n\tconst step = trace[stepIndex] as TTraceStep;\n\tconsole.log('step', step);\n\n\tlet packetStep: TTraceStepNewData;\n\n\tconst steps: React.ReactElement[] = [];\n\ttrace.forEach((step, index) => {\n\t\tif (step.t === TTraceStepType.NewData)\n\t\t\tpacketStep = step;\n\t\tif (showAllSteps || (step.t !== TTraceStepType.Line))\n\t\t\tsteps.push(<TraceStep key={index} traceDump={props.traceDump} stepIndex={stepIndex} index={index} packetStep={packetStep} setStepIndex={setStepIndex} step={step} />);\n\t});\n\n\treturn (\n\t\t<div className=\"trace-dump-steps\">\n\t\t\t{steps}\n\t\t</div>\n\t)\n};\n\nexport default TraceDumpSteps;\n","import React from 'react';\nimport { TTraceStepNewData, TTraceStepOffset } from '../../types';\nimport { scrollTo } from '../../lib/common';\nimport './style.css';\n\ninterface TracePacketPartProps {\n\tpacket: TTraceStepNewData;\n\tstep: TTraceStepOffset;\n\tindex: number;\n\tstepIndex: number;\n\tsetStepIndex: (index: number) => void;\n}\n\nconst TracePacketPart: React.FC<TracePacketPartProps> = (props) => {\n\tconst { packet, step, index, stepIndex, setStepIndex } = props;\n\n\tconst showStep = (index: number) => {\n\t\tsetStepIndex(index);\n\t}\n\n\treturn <span\n\t\t\tref={index === stepIndex ? scrollTo : undefined}\n\t\t\tclassName={index === stepIndex ? 'trace-packet-part trace-packet-part-selected' : 'trace-packet-part'}\n\t\t\tonClick={() => showStep(index)}>\n\t\t{packet.d.slice(step.l * 2, step.o * 2)}\n\t</span>;\n};\n\nexport default TracePacketPart;\n","import { findIndex, findLastIndex } from 'lodash';\nimport React from 'react';\nimport { getDataSize, TTraceDump, TTraceStep, TTraceStepNewData, TTraceStepType } from '../../types';\nimport TimeString from '../TimeString';\nimport TracePacketPart from '../TracePacketPart';\nimport './style.css';\n\ninterface TracePacketProps {\n\ttraceDump: TTraceDump;\n\tpacketIndex: number;\n\tsetPacketIndex: (index: number) => void;\n\tstepIndex: number;\n\tsetStepIndex: (index: number) => void;\n}\n\nconst prevPacketIndex = (trace: TTraceStep[], fromIndex: number) => findLastIndex(trace, (step) => step.t === TTraceStepType.NewData, fromIndex - 1);\n\nconst nextPacketIndex = (trace: TTraceStep[], fromIndex: number) => findIndex(trace, (step) => step.t === TTraceStepType.NewData, fromIndex + 1);\n\nconst TracePacket: React.FC<TracePacketProps> = (props) => {\n\tconst { trace } = props.traceDump;\n\tconst { packetIndex, setPacketIndex, stepIndex, setStepIndex } = props;\n\n\tconst packet = trace[packetIndex] as TTraceStepNewData;\n\n\tif (!packet) {\n\t\t// searching first available packet\n\t\tconst first = nextPacketIndex(trace, -1);\n\t\tif (first === -1) {\n\t\t\treturn <div>No data packets available in the trace file</div>;\n\t\t}\n\n\t\tsetTimeout(() => setPacketIndex(first));\n\t\treturn null;\n\t}\n\n\tconst goPrevPacket = () => {\n\t\tlet prev = prevPacketIndex(trace, packetIndex);\n\t\tif (prev === -1)\n\t\t\tprev = prevPacketIndex(trace, trace.length);\n\t\tsetPacketIndex(prev);\n\t}\n\n\tconst goNextPacket = () => {\n\t\tlet next = nextPacketIndex(trace, packetIndex);\n\t\tif (next === -1)\n\t\t\tnext = nextPacketIndex(trace, -1);\n\t\tsetPacketIndex(next);\n\t};\n\n\tconst packetParts: React.ReactElement[] = [];\n\t// collect packet parts from the trace steps until the next packet occurs\n\tlet i = packetIndex + 1;\n\tlet step = trace[i];\n\twhile (step && step.t !== TTraceStepType.NewData) {\n\t\tif (step.t === TTraceStepType.Offset)\n\t\t\tpacketParts.push(<TracePacketPart key={i} packet={packet} step={step} index={i} stepIndex={stepIndex} setStepIndex={setStepIndex} />);\n\t\ti += 1;\n\t\tstep = trace[i];\n\t}\n\n\treturn (\n\t\t<div className=\"trace-packet\">\n\t\t\t<div className=\"trace-packet-info\">\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t<button onClick={goPrevPacket}>&lt;</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t<button onClick={goNextPacket}>&gt;</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex trace-packet-pad\">\n\t\t\t\t\tTime:&nbsp;<TimeString value={packet.tm} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex trace-packet-pad\">\n\t\t\t\t\tSize: {getDataSize(packet)} B\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex trace-packet-hex\">\n\t\t\t\t{packetParts}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TracePacket;\n","import _ from 'lodash';\nimport React, { ChangeEvent } from 'react';\nimport { useState } from 'react';\nimport { TTraceDump, TTraceFile, TTraceStepType } from '../../types';\nimport SourceCodeView from '../SourceCodeView';\nimport TraceDumpSteps from '../TraceDumpSteps';\nimport TracePacket from '../TracePacket';\nimport './style.css';\n\ninterface TraceDumpViewerProps {\n\ttraceFile: TTraceFile;\n\ttraceDump: TTraceDump;\n}\n\nconst TraceDumpViewer: React.FC<TraceDumpViewerProps> = (props) => {\n\tconst { traceFile, traceDump } = props;\n\tconst [packetIndex, setPacketIndex] = useState(-1);\n\tconst [stepIndex, setStepIndex] = useState(0);\n\tconst [showAllSteps, setShowAllSteps] = useState(false);\n\n\tconst setPacket = (index: number) => {\n\t\tsetPacketIndex(index);\n\t\tsetStepIndex(index);\n\t}\n\n\tconst setStep = (index: number) => {\n\t\tif (index < 0)\n\t\t\tindex = traceDump.trace.length - 1;\n\t\telse if (index >= traceDump.trace.length)\n\t\t\tindex = 0;\n\t\tsetStepIndex(index);\n\t\t// find a packet index to the left of the selected step index\n\t\tconst packetIndex = _.findLastIndex(traceDump.trace, (step) => step.t === TTraceStepType.NewData, index);\n\t\tif (packetIndex !== -1)\n\t\t\tsetPacketIndex(packetIndex);\n\t}\n\n\tconst showAllStepsChanged = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetShowAllSteps(e.target.checked);\n\t}\n\n\tconst prevStep = (index: number) => {\n\t\tif (showAllSteps)\n\t\t\treturn index - 1;\n\t\telse {\n\t\t\tlet prev = _.findLastIndex(traceDump.trace, (step) => step.t !== TTraceStepType.Line, index - 1);\n\t\t\tif (prev === -1)\n\t\t\t\tprev = _.findLastIndex(traceDump.trace, (step) => step.t !== TTraceStepType.Line, traceDump.trace.length - 1);\n\t\t\treturn prev;\n\t\t}\n\t}\n\n\tconst nextStep = (index: number) => {\n\t\tif (showAllSteps)\n\t\t\treturn index + 1;\n\t\telse {\n\t\t\tlet next = _.findIndex(traceDump.trace, (step) => step.t !== TTraceStepType.Line, index + 1);\n\t\t\tif (next === -1)\n\t\t\t\tnext = _.findIndex(traceDump.trace, (step) => step.t !== TTraceStepType.Line, 0);\n\t\t\treturn next;\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"trace-file-info\">\n\t\t\t\tLoaded trace dump file <strong>{traceFile.name}</strong> of size <strong>{Number(traceFile.size / 1024).toFixed(2)}</strong> KiB\n\t\t\t</div>\n\t\t\t<TracePacket traceDump={traceDump} packetIndex={packetIndex} setPacketIndex={setPacket} stepIndex={stepIndex} setStepIndex={setStep} />\n\t\t\t<div className=\"trace-view-settings\">\n\t\t\t\t<button onClick={() => setStep(prevStep(stepIndex))}>&lt;</button>\n\t\t\t\t<button onClick={() => setStep(nextStep(stepIndex))}>&gt;</button>\n\t\t\t\t&nbsp;\n\t\t\t\t<label>show all steps: <input type=\"checkbox\" onChange={showAllStepsChanged} /></label>\n\t\t\t</div>\n\t\t\t<div className=\"trace-dump-details\">\n\t\t\t\t<TraceDumpSteps traceDump={traceDump} stepIndex={stepIndex} setStepIndex={setStep} showAllSteps={showAllSteps} />\n\t\t\t\t<SourceCodeView traceDump={traceDump} stepIndex={stepIndex} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default TraceDumpViewer;\n","import React, { ChangeEvent } from 'react';\nimport { TTraceDump, TTraceFile } from '../../types';\nimport './style.css';\n\ninterface TraceDumpSelectorProps {\n\tsetTraceFile: (file: TTraceFile) => void;\n\tsetTraceDump: (dump: TTraceDump) => void;\n}\n\nconst TraceDumpSelector: React.FC<TraceDumpSelectorProps> = (props) => {\n\n\tconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tif (e.target.files) {\n\t\t\tconst fileReader = new FileReader();\n\t\t\tconst file = e.target.files[0];\n\t\t\tfileReader.readAsText(file, \"UTF-8\");\n\t\t\tprops.setTraceFile({ name: file.name, size: file.size });\n\t\t\tfileReader.onload = (e) => {\n\t\t\t\tif (e.target?.result) {\n\t\t\t\t\tconst fileJson = e.target.result.toString();\n\t\t\t\t\tconst traceDump: TTraceDump = JSON.parse(fileJson);\n\t\t\t\t\tif (traceDump.source) {\n\t\t\t\t\t\ttraceDump.sourceLines = {};\n\t\t\t\t\t\tfor (var key in traceDump.source) {\n\t\t\t\t\t\t\tconst lines = traceDump.source[key].split('\\n');\n\t\t\t\t\t\t\ttraceDump.sourceLines[key] = lines;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprops.setTraceDump(traceDump);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\treturn (\n\t\t<header className=\"trace-dump-header\">\n\t\t\tLoad trace dump:\n\t\t\t<input type=\"file\" onChange={handleChange}/>\n\t\t</header>\n\t);\n};\n\nexport default TraceDumpSelector;\n","import { useState } from 'react';\nimport { TTraceDump, TTraceFile } from './types';\nimport TraceDumpViewer from './components/TraceDumpViewer';\nimport TraceDumpSelector from './components/TraceDumpSelector';\nimport './App.css';\n\nfunction App() {\n\tconst [traceFile, setTraceFile] = useState<TTraceFile>();\n\tconst [traceDump, setTraceDump] = useState<TTraceDump>();\n\n\tconsole.log('traceFile, traceDump', traceFile, traceDump);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ (traceDump && traceFile) ? (\n\t\t\t\t<TraceDumpViewer traceFile={traceFile} traceDump={traceDump} />\n\t\t\t) : (\n\t\t\t\t<TraceDumpSelector setTraceFile={setTraceFile} setTraceDump={setTraceDump} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}